@model List<MVC.Models.tblemp>
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.common.min.css" />
<link rel="stylesheet" href="https://kendo.cdn.telerik.com/2021.2.616/styles/kendo.metroblack.min.css" />

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://kendo.cdn.telerik.com/2021.2.616/js/kendo.all.min.js"></script>

<div id="grid"></div>

@section Scripts {
    <script>
        $(document).ready(function () {
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "https://localhost:7123/api/KendoCrudApi/GetAll",
                        dataType: "json"
                    },
                    create: {
                        url: "https://localhost:7123/api/KendoCrudApi/add",
                        type: "POST",
                        dataType: "json"
                    },
                    update: {
                      url: function(data) {
                          return "https://localhost:7123/api/KendoCrudApi/UpdateCity?id" + data.c_empid;
                      },
                      type: "POST",
                      dataType: "json"
                  },
                  destroy: {
                      url: function(data) {
                          return "https://localhost:7123/api/KendoCrudApi/Delete/" + data.c_empid;
                      },
                      type: "DELETE",
                      dataType: "json"
                  }
                },
                pageSize: 10,
                schema: {
                    model: {
                        id: "c_empid",
                        fields: {
                            c_empid: { type: "number", editable: false, nullable: false },
                            c_empname: { type: "string", editable: true, validation: { required: true } },
                            c_gender: { type: "string", validation: { required: true } },
                            c_dob: { type: "string", validation: { required: true } },
                            c_shift: { type: "string", validation: { required: true } },
                            c_depid: { type: "number", validation: { required: true } },
                            c_empimage: { type: "string", validation: { required: true } }
                        }
                    }
                }
            });

            $("#grid").kendoGrid({
                dataSource: dataSource,
                columns: [
                    { field: "c_empid", title: "Employee ID" },
                    { field: "c_empname", title: "Employee Name" },
                    { field: "c_gender", title: "Gender",editor:genderDropDownEditor, },
                    { field: "c_dob", title: "Date of Birth", },
                    { field: "c_shift", title: "Shift",
                    editor: function (container, options) {
                            var checkboxWrapper = $('<div>').appendTo(container);

                            checkboxWrapper.kendoCheckBoxGroup({
                                items: [
                                    { label: "Morning", value: "M" },
                                    { label: "Afternoon", value: "A" }
                                ],
                                layout: "horizontal"
                            });

                            var checkboxGroup = checkboxWrapper.data("kendoCheckBoxGroup");
                            checkboxGroup.value(options.model.c_shift.split(','));
                            checkboxGroup.bind("change", function (e) {
                                var selectedFacilities = e.sender.value().join(',');
                                options.model.set("c_shift", selectedFacilities);
                            });
                        } },
                     { field: "c_deptid", title: "Department ID",editor:deptDropDownEditor,},

                            { field: "c_empimage", title: "Employee Image",
                    template: "<img src='#: c_empimage #' alt='City Photo' style='width: 50px; height: 50px;' />",
                    editor: imageUploadEditor
                     },
                    { command: ["edit", "destroy"], title: "&nbsp;", width: "200px" }
                ],
                editable: "popup",
                toolbar: ["create"],
                pageable: true,
                sortable: true,
                filterable: true
            });
                  function imageUploadEditor(container, options) {
    // Create input field for image upload
    $('<input type="file" id="temp_name" name="temp_name"  />')
        .appendTo(container)
        .kendoUpload({
            multiple: false,
            validation: {
                allowedExtensions: [".jpg", ".png", ".jpeg"]
            },
            select: imageNameChange
        });

    // Create input field to display current image
    $('<input type="hidden" id="c_empimage" name="c_empimage" data-bind="value:c_empimage"  />').appendTo(container);

    // Show current image if available
    if (options.model.c_empimage) {
        $('<img src="' + options.model.c_empimage + '" alt="Employee Image" style="width: 50px; height: 50px;" />').appendTo(container);
    }
}

          function imageNameChange(e) { 
        $.each(e.files, function (index, value) {
        var formData = new FormData();
        formData.append('file', value.rawFile, value.name);

        $.ajax({
            url: '/KendoGridCrudApi/UploadImage', // Endpoint to handle image upload
            type: 'POST',
            data: formData,
            processData: false,
            contentType: false,
            success: function (response) {
                // Assuming the endpoint returns the URL where the image is stored
                var imageUrl = response.imageUrl;
                $("#c_empimage").val(imageUrl).change();
            },
            error: function (error) {
                console.error('Error uploading image:', error);
            }
        });
    });
}
            
           
            function deptDropDownEditor(container, options) {
    $('<input required name="' + options.field + '"/>')
        .appendTo(container)
        .kendoDropDownList({
            autoBind: true,
            dataTextField: "c_dename",
            dataValueField: "c_deptid",
            dataSource: {
                transport: {
                    read: {
                        url: "https://localhost:7123/api/KendoCrudApi/FetchStates",
                        dataType: "json"
                    }
                },
                schema: {
                    data: function(response) {
                        return response; // Assuming the response is already in the correct format
                    }
                }
            },
            change: function(e) {
                options.model[options.field] = this.value(); // Set the value of the model field
            }
        });
}
            
            function genderDropDownEditor(container, options) {
                $('<label><input type="radio" name="' + options.field + '" value="Male"> Male</label>' +
                    '<label><input type="radio" name="' + options.field + '" value="Female"> Female</label>')
                    .appendTo(container);
            }

            function hobbyCheckBoxEditor(container, options) {
                var metroCheckbox = $('<input type="checkbox" name="M' + options.field + '" value="Metro">M</input>').appendTo(container);
                var airportCheckbox = $('<input type="checkbox" name="A' + options.field + '" value="Airport">A</input>').appendTo(container);

                var cityFacilities = options.model.c_shift.split(',');
                if (cityFacilities.includes('M')) {
                    metroCheckbox.prop('checked', true);
                }
                if (cityFacilities.includes('A')) {
                    airportCheckbox.prop('checked', true);
                }

                metroCheckbox.change(function () {
                    updateCityFacility();
                });
                airportCheckbox.change(function () {
                    updateCityFacility();
                });

                function updateCityFacility() {
                    var facilities = [];
                    if (metroCheckbox.is(':checked')) {
                        facilities.push('M');
                    }
                    if (airportCheckbox.is(':checked')) {
                        facilities.push('A');
                    }
                    options.model.c_shift = facilities.join(',');
                }
            }

            function dateOfBirthEditor(container, options) {
                $('<input name="' + options.field + '" required data-bind="value:' + options.field + '">')
                    .appendTo(container)
                    .kendoDatePicker({
                        format: "MM/dd/yyyy"
                    });
            }

            dataSource.bind("requestEnd", function (e) {
                if (e.type === "create" || e.type === "update" || e.type === "destroy") {
                    dataSource.read();
                }
            });

            $("#grid").on("click", ".k-grid-cancel-changes", function () {
                dataSource.cancelChanges();
            });
        });
    </script>
}
